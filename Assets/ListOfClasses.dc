from DistributedObjects.DLevelManager/AI import DLevelManager/AI
from DistributedObjects.DLevel/AI import DLevel/AI
from DistributedObjects.DPlayer/AI import DPlayer/AI
from DistributedObjects.DCherry/AI import DCherry/AI


struct PlayerInput {
    int16 move_x/10000;
    int16 move_y/10000;
    int16 move_z/10000;
    uint8 jump;
}

struct JoinParameters {
    uint16 level_zone,
    uint16 level_id,
    uint16 player_id
}

dclass DLevelManager: DistributedObject {
    request_join(uint8 max_players) p2p;
    request_leave(uint16 level_id, uint16 player_id) p2p;
    request_quit() p2p;
    join_success(JoinParameters params) p2p;
    join_failure() p2p;
    left_success() p2p;
};

dclass DLevel: DistributedNode {
    generate_cherries() p2p;
};

dclass DPlayer: DistributedNode {
    send_input(PlayerInput p_input) p2p;
    set_model_hpr(int16 % 360 / 10, int16 % 360 / 10, int16 % 360 / 10) clsend broadcast;
};

dclass DCherry: DistributedNode {
    request_pos() p2p;
};
